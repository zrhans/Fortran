C                                                                     C
C  ######  PROGRAMA MAIN "PARA OS DADOS DO EXP. XICA-99  ########     C
C                                                                     C
C   INICIADO EM 1999. SOFREU DIVERSAS ATUALIZACOES. A ULTIMA DELAS EM C
C   FEVEREIRO DE 2005. NESTA ULTIMA VERSAO FORAM INCORPORADAS AS      C
C   MATRIZES NINPUT, NNINPUT, NNNINPUT, AS QUAIS POSSUEM OS VALORES   C
C   DE u, w E w APOS AS ROTACOES SUCESSIVAS (Kaimal e Finnigan, 94)   C
C   ESTE PROGRAMA ESTA ADAPTADO PARA LER O ARQUIVO DE DADOS DE        C
C   EXPERIMENTO DE DONA FRANCISCA (1999), COM 15 COLUNAS, E APOS A    C
C   SUPRESSAO DAS VIRGULAS ENTRE AS COLUNAS - DADOS TRATADOS -        C
C                                                                     C
C   O PROGRAMA CALCULA VALORES MEDIOS, VARIANCAS, FLUXOS, ESPECTROS   C
C   E COESPECTROS PARA UMA SERIE TEMPORAL DE N DADOS. NN E O TAMANHO  C
C   TOTAL DO ARQUIVO A SER LIDO INICIALMENTE. O PROGRAMA CALCULA      C
C   SUCESSIVAMENTE E AVANCA EM STEPS DE KK. K  E A DIMENSAO DAS       C
C   MATRIZES DE ESPECTRO. OBSERVE QUE K DEVE SER SETADO COMO N/2      C
C   (Stull, 88). M É O NÚMERO DE BLOKS EM QUE OS ESPECTROS SÃO        C
C   SUAVISADOS.                                                       C
C                                                                     C
C   ESTA VERSAO NAO ESTA EFETUANDO A MEDIA MOVEL E TAMBEM NÃO ESTÁ    C
C   CALCULANDO A FUNÇÃO DE CORRELAÇÃO. A MÉDIA MÓVEL PODE SER         C
C   INCORPORADO, POIS ESTÁ FEITA EM OUTRO PROGRAMA.                   C
C                                                                     C
C   TAMBEM PODE SER INCORPORADO A ESTE PROGRAMA A TECNICA DE CALCULAR C
C   OS FLUXOS, etc. EM SUBINTERVALOS DE DIVIDIDOS POR 2               C
C   (Howell & Sun, 98; Moraes et al, 02).                             C
C                                                                     C
C                                          Brasília, Fevereiro 2005   C
C                                                                     C
C                                                                     C
C   APÓS AS MODIFICAÇÕES EFETUADAS EM FEV.2005 O PROGRAMA FOI         C
C   ADPTADO PARA SER USADO PARA A TORRE DA PASTAGEM DO LBA            C
C                                                                     C
C                                          Santa Maria, Dezembro 2005 C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C
C N   = TAMANHO DA SERIE TEMPORAL EM CADA LOOPING (1/2 HORA,POR EXEMPLO)
CTAMANHO DO ARQUIVO DE ENTRADA (1 DIA, POR EXEMPLO)
C KK  = AVANCO DO LOOPING DE ANALISE
C K   = ENTRADA PARA A ANALISE DE FOURIER (SEMPRE IGUAL A N/2)
C M   = NUMERO DE BANDAS DO ESPECTRO SUAVIZADO
C MNN = NUMERO DE PONTOS DO ESPECTRO A SEREM LOG-FITADOS PARA DISSIPA
C
	PARAMETER(N=16384,NN=432000,KK=1800,K=8192,M=44,MNN=12)
C
        REAL INPUT(NN,15)
        real NINPUT(N,4),NNINPUT(N,4),NNNINPUT(N,4)
C AS MATRIZES ACIMA POSSUEM DIMENSÃO (N,4), ONDE AS 4 COLUNAS REFEREM-SE
C AS 3 VELOCIDADES DO 3D E AS 3 VELOCIDADES DO GILL.
        REAL NTURBU(N),NTURBV(N),NTURBW(N)
        REAL TURBU(N),TURBV(N),TURBW(N)
        REAL TURBT(N),TURBQ(N),TURBC(N)
C
      REAL INPUT1,INPUT2,INPUT3,INPUT4,INPUT5,INPUT6
C AS VARIAVEIS ACIMA SÃO USADAS NAS ROTAÇÕES DO 3D E DO GILL
c
        REAL NEWTURBW(N),NEWTURBT(N),NEWTURBU(N),NEWTURBV(N)
        REAL NEWTURBQ(N),NEWTURBC(N)
        REAL NNEWTURBW(N),NNEWTURBT(N),NNEWTURBU(N),NNEWTURBV(N)
        REAL NNEWTURBQ(N),NNEWTURBC(N)
        REAL WINTURBW(N),WINTURBT(N),WINTURBU(N),WINTURBV(N)
        REAL WINTURBQ(N),WINTURBC(N)
        COMPLEX FFT1(N),FFT2(N),FFT3(N),FFT4(N),FFT5(N),FFT6(N)
        REAL SPCW(K+1),SPCT(K+1),SPCU(K+1),SPCV(K+1)
        REAL SPCQ(K+1),SPCC(K+1)
C FFT1 e FFT2 ASSOCIADOS COM SPCU e SPCV
C FFT3 e FFT4 ASSOCIADOS COM SPCW e SPCT
C FFT5 e FFT6 ASSOCIADOS COM SPCQ e SPCC
        REAL SSPCW(K),SSPCT(K),SSPCU(K),SSPCV(K)
        REAL SSPCQ(K),SSPCC(K)
C  FREQUENCIAS PARA ESPECTROS E CO-ESPECTROS
        REAL HZWS(M),HZTS(M),HZUS(M),HZVS(M)
        REAL HZwtC(M)
C  ESPECTROS E CO-ESPECTROS SUAVISADOS
        REAL WSMOOTH(M),TSMOOTH(M),USMOOTH(M),VSMOOTH(M)
        REAL WTSMOOTH(M)
C ESPECTROS DE QUADRATURA SUAVISADOS - ENTENDER !!!!
        REAL COT(N),QOT(N),COQ(N),QOQ(N)
        REAL CCOT(K),QQOT(K),CCOQ(K),QQOQ(K)
        REAL CCOC(K),COC(N),QQOC(K),QOC(N)
        REAL HERTZ(K+1),HHERTZ(K)
      REAL EPSU(MNN),EPSV(MNN),EPSW(MNN),EPSHZ(MNN)
	REAL DISSIPW,DISSIPV,DISSIPU
	REAL DISMEANW,PHIEPSW23
	REAL DISMEANU,PHIEPSU23
	REAL DISMEANV,PHIEPSV23
	REAL PHIEPSW(M),DISSIPW2(M)
	REAL PHIEPSU(M),DISSIPU2(M)
	REAL PHIEPSV(M),DISSIPV2(M)
	REAL ADISW,ADISV,ADISU
	REAL AW,AU,AV
        REAL FREQ
C
        REAL CORU,DPU,VARU
        REAL CORV,DPV,VARV
        REAL CORW,DPW,VARW
        REAL CORT,DPT,VART
        REAL CORQ,DPQ,VARQ
        REAL CORC,DPC,VARC
C
        REAL SOMA(4),MEDIO(4)
        REAL NSOMA(4),NMEDIO(4)
        REAL NNSOMA(4),NNMEDIO(4)
        REAL NNNSOMA(4),NNNMEDIO(4)
C AS DIMENSOES DAS MATRIZES ACIMA COMTEMPLAM AS 3 VARIAVEIS ROTADAS
C
C WIND SPEED AND DIRECTION PARA O SONICO E GILL
C 2D SIGNIFICA VENTO NO PLANO HORIZONTAL
C 3D SIGNIFICA VENTO NO ESPAÇO 3D
        REAL WIND2D,NWIND2D,NNWIND2D,NNNWIND2D
        REAL WIND3D
C
        REAL AT1,AT2,AT3
C
C VARIÁVEIS ASSOCIADAS COM O DETREND
C
        REAL SNEWTU,SNEWTV,SNEWTW,SNEWTT
        REAL SNEWTQ,SNEWTC
        REAL MNEWTU,MNEWTV,MNEWTW,MNEWTT
        REAL MNEWTQ,MNEWTC
C
        REAL USTAR,USTAR1,USTAR2
        REAL ECT,ECT1,ECT2,ECT3
        REAL WT,SEN
        REAL MOL,TSTAR,QSTAR,CSTAR
        REAL WU,WV
C
C VARIAVEIS DEFINIDAS PARA TESTAR SE AS COISAS ESTAO FUNCIONANDO
C VER STULL, PAG
C
        REAL WTW,WTFFT
C
C PARAMETRO US=UNIDADE DE SAIDA, FEITO PELO HANS, PARA EVITAR A
C TRIPA DE WRITE NOS ESPECTROS
C
      INTEGER US
C
C AGORA VAMOS DEFINIR QUANTOS SAO OS ARQUIVOS EM QUE OS ESPECTROS
C SERAO ESCRITOS
C
      CHARACTER*8 ARQUIVO(24)
C
C
      COMMON /KOEFF/FREQ
C
CHAVES PARA ESCREVER E CALCULAR ESPECTROS
C
      ESCESP=1
        CALESP=1
C
      FREQ=5.
      DATA Z3D/9./
C
C AQUI VAMOS DEFINIR OS NOMES DOS ARQUIVOS DE SAIDA PARA OS ESPECTROS
C
      DATA ARQUIVO/"SWS1.D13","SWS2.D13","SWS3.D13","SWS4.D13",
     &             "SWS5.D13","SWS6.D13","SCS1.D13","SCS2.D13",
     &             "SCS3.D13","SCS4.D13","SCS5.D13","SCS6.D13",
     &             "SWC1.D13","SWC2.D13","SWC3.D13","SWC4.D13",
     &             "SWC5.D13","SWC6.D13","SCC1.D13","SCC2.D13",
     &             "SCC3.D13","SCC4.D13","SCC5.D13","SCC6.D13"/
C
CLAREANDO AS NOMENCLATURAS PARA O NOME DOS ARQUIVOS
C
C    SXYN.DAT
C
C  ONDE S=SPECTRO
C       X= (W ou C) WINDY OR CALM (DEFINIDO PELO LIMITE DO VENTO MEDIO
C       Y= (S ou C (STABLE OU CONVECTIVO)
C       N=1,2,3,4,5 OU 6 (FAIXAS DE INTERVALO DE z/L)
C       ONDE 1= 0<z/L<0.1
c            2= 0.1<z/L<0.3
c            3= 0.3<z/L<0.5
c            4= 0.5<z/L<0.8
c            5= 0.8<z/L<1.1
c            6= 1.1<z/L
C
        OPEN(UNIT=13,FILE='STATIS.D13')
C
        OPEN(UNIT=15,FILE='GERAL.D13',STATUS='UNKNOWN')
C
COMECANDO A LER O ARQUIVO DE ENTRADA
C
C A ORDEM DOS DADOS DE ENTRADA E COMO SEGUE:
C
C CODIGO,JD,YEAR,MM,DAY,HH,MM,SEC,COUNT,STATUS1,STATUS2,U,V,W,T,HEX
C
      OPEN(UNIT=11,FILE='INPUT.DAT',STATUS='UNKNOWN')
      DO 10 I=1,NN
      READ (11,*,END=10)(INPUT(I,J),J=1,15)
10    CONTINUE
C
C
C ARQUIVOS PARA OS ESPECTROS SUAVISADOS
C
        J=1
        DO I=24,47
        OPEN(UNIT=I,FILE=ARQUIVO(J))
        J=J+1
        END DO
C
C
      KTURB=0
C
6688  CONTINUE
C
CALCULANDO AS COISAS ASSOCIADAS COM OS DADOS FAST
C
        DO I=1,N
        TURBU(I)=0.
        TURBV(I)=0.
        TURBW(I)=0.
        TURBT(I)=0.
C       TURBQ(I)=0.
C       TURBC(I)=0.
        NEWTURBU(I)=0.
        NEWTURBV(I)=0.
        NEWTURBW(I)=0.
        NEWTURBT(I)=0.
C       NEWTURBQ(I)=0.
C       NEWTURBC(I)=0.
      END DO
C
        DO 2020 J=1,4
        MEDIO(J)=0.
        SOMA(J)=0.
2020  CONTINUE
c
CALCULA MEDIAS E COMPONENTES TURBULENTAS DOS DADOS FAST
C
        DO 5 J=1,4
        DO 5 I=1,N
        SOMA(J)=SOMA(J)+INPUT(I+KTURB,J+10)
5     CONTINUE
        DO 3030 J=1,4
        MEDIO(J)=SOMA(J)/N
3030  CONTINUE
C
      DO I=1,N
        TURBT(I)=INPUT(I+KTURB,14)-MEDIO(4)
      END DO
C
      T0=273+MEDIO(4)
C
C      PRINT*,INPUT(I+KTURB,3),INPUT(I+KTURB,4),T0,MEDIO(6),MEDIO(5)
C
CALCULA THE WIND SPEED
C
      WIND2D=SQRT(MEDIO(1)**2+MEDIO(2)**2)
        write(15,*)'KTURB=',kturb
        write(15,*)
        write(15,*)'Medias dos dados de entrada'
      write(15,*)medio(1),medio(2),medio(3),medio(4)
C
        write(15,*)
        WRITE(15,*)'RAPIDEZ DO VENTO HORIZONTAL =',WIND2D
C
C        PRINT*,KTURB,INPUT(KTURB,3),INPUT(KTURB,4),T0,
C     &         MEDIO(6),MEDIO(5),WIND2D
CALCULA A DIRECAO DO VENTO horizontal para padrao meteorologico
C
        AT=ATAN(MEDIO(1)/MEDIO(2))
          D=AT*180./(4.*ATAN(1.))
        DA=ABS(D)
C
        ATT=ATAN(WIND2D/MEDIO(3))
C
CALCULA A DIRECAO DO VENTO HORIZONTAL NO SONICO
C
        IF(MEDIO(2).GT.0.AND.MEDIO(1).GT.0) THEN
         DR=180.+DA
        ENDIF
C
        IF(MEDIO(2).GT.0.AND.MEDIO(1).LT.0) THEN
         DR=180.-DA
        ENDIF
C
        IF(MEDIO(2).LT.0.AND.MEDIO(1).LT.0) THEN
         DR=DA
        ENDIF
C
        IF(MEDIO(2).LT.0.AND.MEDIO(1).GT.0) THEN
         DR=360.-DA
        ENDIF
C
C
C ESCREVE AS DIRECOES DO VENTO HORIZONTAL
C
        RDR=DR*(4.*ATAN(1.))/180.
        WRITE(15,*)'DIRECAO DO VENTO HOZ. NO SONICO (RAD) =',RDR
        WRITE(15,*)'DIRECAO DO VENTO HOZ. NO SONICO (GRA) =',DR
        write(15,*)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C AS COMPONENTES u E v SERAO ROTADAS DE MODO A COINCIDIR u COM
C A DIRECAO DO VENTO MEDIO E v COM A DIRECAO TRANSVERSAL
C VER KAIMAL E FINNIGAN (1994)
C
CALCULA O PRIMEIRO ANGULO
C
      AT1=ATAN(MEDIO(2)/MEDIO(1))
C
C EFETUA A PRIEMIRA ROTACAO
C
C NO SONICO
        DO I=1,N
        INPUT1=INPUT(I+KTURB,11)*cos(AT1)+INPUT(I+KTURB,12)*sin(AT1)
        INPUT2=INPUT(I+KTURB,12)*COS(AT1)-INPUT(I+KTURB,11)*SIN(AT1)
          NINPUT(I,1)=INPUT1
        NINPUT(I,2)=INPUT2
          NINPUT(I,3)=INPUT(I+KTURB,13)
        end do
c
C RECALCULA O  NOVO VALOR MEDIO DE u E v
C
        DO  J=1,3
        NMEDIO(J)=0.
        NSOMA(J)=0.
      ENDDO

        DO 106 J=1,3
        DO 106 I=1,N
        NSOMA(J)=NSOMA(J)+NINPUT(I,J)
106   CONTINUE
C
        DO 4041 J=1,3
        NMEDIO(J)=NSOMA(J)/N
4041  CONTINUE
C
        WRITE(15,*)
        WRITE(15,*)'VELOCIDADES MEDIAS APOS A ROTACAO 1'
        WRITE(15,812)
812     FORMAT(3X,'<U3D>',5X,'<V3D>',5X,'<W3D>')
        WRITE(15,2873)NMEDIO(1),NMEDIO(2),NMEDIO(3)
2873     FORMAT(1X,F5.2,3X,F5.2,3X,F5.2)
C
C RECALCULA THE WIND SPEED NO SONICO
C
      NWIND2D=SQRT(NMEDIO(1)**2+NMEDIO(2)**2)
        write(15,*)
        WRITE(15,*)'RAPIDEZ DO VENTO HORIZONTAL EM 9M (m/s) =',NWIND2D
C
CALCULA O SEGUNDO ANGULO
C
      AT2=ATAN(NMEDIO(3)/NMEDIO(1))
C
        WRITE(15,*)'ANGULO DA SEGUNDA ROTACAO (RAD) SON. =',AT2
C
C EFETUA A SEGUNDA ROTACAO
C
C  NO SONICO
        DO I=1,N
        INPUT3=NINPUT(I,1)*cos(AT2)+NINPUT(I,3)*sin(AT2)
        INPUT4=NINPUT(I,3)*COS(AT2)-NINPUT(I,1)*SIN(AT2)
        NNINPUT(I,1)=INPUT3
          NNINPUT(I,2)=NINPUT(I,2)
        NNINPUT(I,3)=INPUT4
        END DO
C
C RECALCULA OS  NOVOS VALORES MEDIO DE u,v E w
C
        DO  J=1,3
        NNMEDIO(J)=0.
        NNSOMA(J)=0.
      ENDDO
C
      DO 166 J=1,3
        DO 166 I=1,N
        NNSOMA(J)=NNSOMA(J)+NNINPUT(I,J)
166   CONTINUE
C
        NNMEDIO(1)=NNSOMA(1)/N
        NNMEDIO(2)=NNSOMA(2)/N
        NNMEDIO(3)=NNSOMA(3)/N
C
C RECALCULA THE WIND SPEED NO SONICO
      NNWIND2D=SQRT(NNMEDIO(1)**2+NNMEDIO(2)**2)
C
        write(15,*)
        WRITE(15,*)'RAPIDEZ DO VENTO HORIZONTAL EM 9M (m/s) =',NNWIND2D
C
        WRITE(15,*)
        WRITE(15,*)'VELOCIDADES MEDIAS APOS A ROTACAO 2'
        WRITE(15,8992)
8992     FORMAT(3X,'<U3D>',5X,'<V3D>',5X,'<W3D>')
        WRITE(15,28113)NNMEDIO(1),NNMEDIO(2),NNMEDIO(3)
28113     FORMAT(1X,F5.2,3X,F5.2,3X,F5.2)
C
CALCULA AS NOVAS COMPONENTES TURBULENTAS
C
        DO I=1,N
        NTURBU(I)=NNINPUT(I,1)-NNMEDIO(1)
        NTURBV(I)=NNINPUT(I,2)-NNMEDIO(2)
        NTURBW(I)=NNINPUT(I,3)-NNMEDIO(3)
      END DO
C
CALCULA OS PARAMETROS DE MODO A DETERMINAR O TERCEIRO ANGULO
C
      FLU1=0.
        V32=0.
        W32=0.
          DO I=1,N
        FLU1=FLU1+(NTURBV(I)*NTURBW(I))
      V32=V32+(NTURBV(I)*NTURBV(I))
        W32=W32+(NTURBW(I)*NTURBW(I))
        END DO
C
        FLU1=FLU1/N
        V32=V32/N
        W32=W32/N
CALCULA O TERCEIRO ANGULO
C
      AT3=0.5*ATAN(2*FLU1/(V32-W32))
C
C       WRITE(15,*)'ANGULO DA TERCEIRA ROTACAO NO SON. (RAD) =',AT3
C       WRITE(15,*)'ANGULO DA TERCEIRA ROTACAO NO GILL (RAD) =',AT3G
C
C EFETUA A ROTACAO FINAL NO SONICO
C
        DO I=1,N
        INPUT5=NNINPUT(I,2)*cos(AT3)+NNINPUT(I,3)*sin(AT3)
        INPUT6=NNINPUT(I,3)*COS(AT3)-NNINPUT(I,2)*SIN(AT3)
        NNNINPUT(I,1)=NNINPUT(I,1)
        NNNINPUT(I,2)=INPUT5
        NNNINPUT(I,3)=INPUT6
        END DO
C
C RECALCULA OS  NOVOS VALORES MEDIO DE u,v E w
C
                  DO  J=1,3
          NNNMEDIO(J)=0.
          NNNSOMA(J)=0.
                  ENDDO
C
          DO 186 J=1,3
          DO 186 I=1,N
             NNNSOMA(J)=NNNSOMA(J)+NNNINPUT(I,J)
186       CONTINUE
C
        DO J=1,3
            NNNMEDIO(J)=NNNSOMA(J)/N
        END DO
C
        WRITE(15,*)
        WRITE(15,*)'VELOCIDADES MEDIAS APOS A ROTACAO 3'
        WRITE(15,8792)
8792     FORMAT(3X,'<U3D>',5X,'<V3D>',5X,'<W3D>')
        WRITE(15,28114)NNNMEDIO(1),NNNMEDIO(2),NNNMEDIO(3)
28114     FORMAT(1X,F5.2,3X,F5.2,3X,F5.2)
C
        NNNWIND2D=SQRT(NNNMEDIO(1)**2+NNNMEDIO(2)**2)
        write(15,*)
        WRITE(15,*)'RAPIDEZ DO VENTO HORIZONTAL EM 9M (m/s) =',NNNWIND2D
        write(15,*)
        write(15,*)
        write(15,*)'########################################'
        write(15,*)
C
C
C CALCULA THE WIND SPEED
C
       WIND3D=SQRT(NNNMEDIO(1)**2+NNNMEDIO(2)**2+NNNMEDIO(3)**2)
C
C
CALCULA AS COMPONENTES TURBULENTAS APOS A ROTACAOA 3D
c
        DO I=1,N
        TURBU(I)=NNNINPUT(I,1)-NNNMEDIO(1)
        TURBV(I)=NNNINPUT(I,2)-NNNMEDIO(2)
        TURBW(I)=NNNINPUT(I,3)-NNNMEDIO(3)
        ENDDO
CALCULA OS NOVOS DESVIO PADRAO E A VARIANCA
        CORU=0.
        CORV=0.
        CORW=0.
        CORT=0.
C
        DO 200 I=1,N
        CORU=CORU+(TURBU(I)**2)
        CORV=CORV+(TURBV(I)**2)
        CORW=CORW+(TURBW(I)**2)
        CORT=CORT+(TURBT(I)**2)
200   CONTINUE
C
        VARU=CORU/N
        DPU=SQRT(VARU)
        VARV=CORV/N
        DPV=SQRT(VARV)
        VARW=CORW/N
        DPW=SQRT(VARW)
        VART=CORT/N
        DPT=SQRT(VART)
C
C      WRITE(15,*)
C       WRITE(15,*)'DESVIOS PADROES SEM SPIKES E ROTAÇAO DE u E v'
C       WRITE(15,*)DPU,DPV,DPW,DPT,DPQ,DPC
C
CALCULA PARAMETROS MICROMETEOROLOGICOS
C
CALCULA USTAR FLUXOS DE MOMENTUM
        USTAR1=0.
        USTAR2=0.
          DO 4510 I=1,N
          USTAR1=USTAR1+(TURBU(I)*TURBW(I))
        USTAR2=USTAR2+(TURBV(I)*TURBW(I))
4510    CONTINUE
          WU=(USTAR1)/N
          WV=(USTAR2)/N
        USTAR1=(USTAR1/N)**2
        USTAR2=(USTAR2/N)**2
        USTAR=USTAR1+USTAR2
          USTAR=SQRT(SQRT(USTAR))
C
CALCULA ENERGIA CINETICA TURBULENTA
C
        ECT1=0.
        ECT2=0.
        ECT3=0.
        DO 4515 I=1,N
        ECT1=ECT1+(TURBU(I)**2)
        ECT2=ECT2+(TURBV(I)**2)
        ECT3=ECT3+(TURBW(I)**2)
4515    CONTINUE
        ECT1=ECT1/N
        ECT2=ECT2/N
        ECT3=ECT3/N
        ECT=0.5*(ECT1+ECT2+ECT3)
C
CALCULA O FLUXO DE CALOR SENSIVEL
C
        RHO=1.21
        CP=1005.
        WT=0.
        DO 4525 I=1,N
        WT=WT+(TURBW(I)*TURBT(I))
4525    CONTINUE
        WT=WT/N
        SEN=RHO*CP*WT
CALCULA O FLUXO DE CALOR LATENTE
C
CALCULA O COMPRIMENTO DE OBUKHOV
C
         MOL=-((USTAR**3)*T0)/(0.35*9.81*WT)
C
CALCULA TSTAR, QSTAR E CSTAR
C
         TSTAR=WT/USTAR
C
Ccccccccccccccccccccccccccccccccccccccccccc
C
c
      IF(CALESP.EQ.1)THEN
C
COMECA OS CALCULOS ESPECTRAIS AQUI,
COM A APLICACAO DA JANELA AOS NOVOS VALORES TURBULENTOS.
C
      CALL SEMTREND(TURBU,NEWTURBU,N)
      CALL SEMTREND(TURBV,NEWTURBV,N)
      CALL SEMTREND(TURBW,NEWTURBW,N)
      CALL SEMTREND(TURBT,NEWTURBT,N)
cccccccccccccccccccccccccccccccccccccccc
        SNEWTU=0.
        SNEWTV=0.
        SNEWTW=0.
        SNEWTT=0.
C
C
        DO 1836 I=1,N
      SNEWTU=SNEWTU+NEWTURBU(I)
      SNEWTV=SNEWTV+NEWTURBV(I)
      SNEWTW=SNEWTW+NEWTURBW(I)
      SNEWTT=SNEWTT+NEWTURBT(I)
1836   CONTINUE
C
        MNEWTU=SNEWTU/N
        MNEWTV=SNEWTV/N
        MNEWTW=SNEWTW/N
        MNEWTT=SNEWTT/N
C
CALCULA AS COMPONENTES TURBULENTAS APOS O DETREND
C
        DO 2017 I=1,N
        NNEWTURBU(I)=NEWTURBU(I)-MNEWTU
        NNEWTURBV(I)=NEWTURBV(I)-MNEWTV
        NNEWTURBW(I)=NEWTURBW(I)-MNEWTW
        NNEWTURBT(I)=NEWTURBT(I)-MNEWTT
2017  CONTINUE
ccccccccccccccccccccccccccccccccccccccccc
c
C 
        CALL WINDOW(NNEWTURBU,WINTURBU,N)
        CALL WINDOW(NNEWTURBV,WINTURBV,N)
        CALL WINDOW(NNEWTURBW,WINTURBW,N)
        CALL WINDOW(NNEWTURBT,WINTURBT,N)
c
CCHAMA A SUBROTINA PARA CALCULAR AS FFT
CONFORME NUMERICAL RECIPES PAGS 397-398
C
CONSIDERE QUE AS FUNCOES QUE RETORNAM DA SUBROTINA TWOFFT
C NAO SAO NORMALIZADAS, ISTO E, NAO ESTAO DIVIDIDAS POR N
C
c
        CALL TWOFFT(WINTURBV,WINTURBU,FFT1,FFT2,N)
        CALL TWOFFT(WINTURBW,WINTURBT,FFT3,FFT4,N)
C
      WTFFT=0.
      do 2927 i=1,n
        WTFFT=WTFFT+(REAL(FFT3(I))*REAL(FFT4(I))+
     &         (AIMAG(FFT3(I))*AIMAG(FFT4(I))))
C
2927  continue
c
        WTW=0.
        DO 4025 I=1,N
        WTW=WTW+(WINTURBW(I)*WINTURBT(I))
4025    CONTINUE
        WTW=WTW/N
C
CALCULO, PELA SUBROTINA SPECDIS, DA DISCRETE ENERGY SPECTRUM
CONFORME STULL PG 312
C
C
        DO 8084 I=1,K+1
        HERTZ(I)=(I)*FREQ/N
8084    CONTINUE
C
c
C
        CALL SPECDIS(FFT1,SPCV,N,K)
        CALL SPECDIS(FFT2,SPCU,N,K)
        CALL SPECDIS(FFT3,SPCW,N,K)
        CALL SPECDIS(FFT4,SPCT,N,K)
c
c
C
      CALL CROSS(FFT3,FFT4,COT,QOT)
C
      DO I=1,K
        SSPCU(I)=SPCU(I+1)
        SSPCV(I)=SPCV(I+1)
        SSPCW(I)=SPCW(I+1)
        SSPCT(I)=SPCT(I+1)
        CCOT(I)=COT(I+1)
        QQOT(I)=QOT(I+1)
        HHERTZ(I)=HERTZ(I+1)
      END DO
C
C
CONSIDERE, NO WRITE ACIMA, QUE A DENSIDADE ESPECTRAL NAO E'
C ESCRITA PARA I=1, POIS
C
CHAMA A SUBROTINA QUE SUAVIZA O ESPECTRO EM M BANDAS
C
c
      CALL BANDAS(HHERTZ,SSPCW,HZwS,WSMOOTH)
      CALL BANDAS(HHERTZ,SSPCT,HZtS,TSMOOTH)
      CALL BANDAS(HHERTZ,SSPCU,HZuS,USMOOTH)
      CALL BANDAS(HHERTZ,SSPCV,HZvS,VSMOOTH)
	CALL BANDAS(HHERTZ,CCOT,HzwtC,WTSMOOTH)
C
COM O FITTING SENDO FEITO PARA UMA RETA TEMOS QUE CALCULAR
COM O LOG DOS DADOS
C
           DO I=1,MNN
	EPSU(I)=LOG10(USMOOTH(I+29))
	EPSV(I)=LOG10(VSMOOTH(I+29))
      EPSW(I)=LOG10(WSMOOTH(I+29))
	EPSHZ(I)=LOG10(HZWS(I+29))
	     ENDDO
C
      CALL FIT(EPSHZ,EPSW,MNN,1,0,AW,BW,SIGAW,SIGBW,CHI2W,QW)
      CALL FIT(EPSHZ,EPSU,MNN,1,0,AU,BU,SIGAU,SIGBU,CHI2U,QU)
      CALL FIT(EPSHZ,EPSV,MNN,1,0,AV,BV,SIGAV,SIGBV,CHI2V,QV)
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
COMECA AQUI O CALCULO DA TAXA DE DISSIPACAO
C
C INICIALMENTE Epsilon e Phi_Epsilon sao
CALCULADOS ATRAVES DO FITING DO ESPACTRO, CONFORME DETERMINADO
C PELA SUBROUTINE FIT
C
	DISSIPW=(11.54/(WIND3D**1.5))*(10**(1.5*AW)) 
	DISSIPV=(11.54/(WIND3D**1.5))*(10**(1.5*AV))
	DISSIPU=(17.77/(WIND3D**1.5))*(18**(1.5*AU))
C
      ADISW=0.35*Z3D*DISSIPW/(USTAR**3)
	ADISV=0.35*Z3D*DISSIPV/(USTAR**3)
	ADISU=0.35*Z3D*DISSIPU/(USTAR**3)
C
CALCULO DE Epsilon e Phi_Epsilon assumindo que a Lei de Kolmogorov
C EXISTE. NOTE-SE QUE O VALOR MEDIO E CALCULADO, LOGO ABAIXO
COM O MESMO NUMERO DE PONTOS QUE E USADO PARA FITAR O ESPECTRO ACIMA
C
        DO I=1,M
	DISSIPW2(I)=(WSMOOTH(I)**(1.5))*(HZWS(I)**(2.5))/(.9*WIND3D)
	PHIEPSW(I)=2.5*(HZWS(I)**(5/3))*WSMOOTH(I)*(Z3D**(2/3))/
     &            ((USTAR**2)*(WIND3D**(2/3)))
	DISSIPU2(I)=(USMOOTH(I)**(1.5))*(HZWS(I)**(2.5))/(.9*WIND3D)
	PHIEPSU(I)=2.5*(HZWS(I)**(5/3))*USMOOTH(I)*(Z3D**(2/3))/
     &            ((USTAR**2)*(WIND3D**(2/3)))
	DISSIPV2(I)=(VSMOOTH(I)**(1.5))*(HZWS(I)**(2.5))/(.9*WIND3D)
	PHIEPSV(I)=2.5*(HZWS(I)**(5/3))*VSMOOTH(I)*(Z3D**(2/3))/
     &            ((USTAR**2)*(WIND3D**(2/3)))
	ENDDO
C
       DISMEANW=0.
       DISMEANU=0.
       DISMEANV=0.
       PHIEPSW23=0.
       PHIEPSU23=0
       PHIEPSV23=0.
          DO I=1,12
       DISMEANW=DISMEANW+DISSIPW2(I+29)
       DISMEANU=DISMEANU+DISSIPU2(I+29)
       DISMEANV=DISMEANV+DISSIPV2(I+29)
       PHIEPSW23=PHIEPSW23+PHIEPSW(I+29)
       PHIEPSU23=PHIEPSU23+PHIEPSU(I+29)
       PHIEPSV23=PHIEPSV23+PHIEPSV(I+29)
          ENDDO
       DISMEANW=DISMEANW/MNN
       DISMEANU=DISMEANU/MNN
       DISMEANV=DISMEANV/MNN
       PHIEPSW23=PHIEPSW23/MNN
       PHIEPSU23=PHIEPSU23/MNN
       PHIEPSV23=PHIEPSV23/MNN
C
C A COMPARACAO ENTRE OS Epsilons e Phi-Epsilon deve ser da seguinte forma
c
C   DISSIPW = DISMEAN W (etc) e ADISW**(2/3) = PHIEPSW23
C
C
COMECANDO A ESCREVER OS ESPECTROS SUAVISADOS
C
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(0.).AND.(Z3D/MOL).LT.(0.1)))
     & US=24
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(0.1).AND.(Z3D/MOL).LT.(0.3)))
     & US=25
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(0.3).AND.(Z3D/MOL).LT.(0.5)))
     & US=26
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(0.5).AND.(Z3D/MOL).LT.(0.8)))
     & US=27
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(0.8).AND.(Z3D/MOL).LT.(1.1)))
     & US=28
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(1.1).AND.(Z3D/MOL).LT.(2.)))
     & US=29
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(0.).AND.(Z3D/MOL).LT.(0.1)))
     & US=30
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(0.1).AND.(Z3D/MOL).LT.(0.3)))
     & US=31
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(0.3).AND.(Z3D/MOL).LT.(0.5)))
     & US=32
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(0.5).AND.(Z3D/MOL).LT.(0.8)))
     & US=33
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(0.8).AND.(Z3D/MOL).LT.(1.1)))
     & US=34
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(1.1).AND.(Z3D/MOL).LT.(2.)))
     & US=35
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(-0.1).AND.(Z3D/MOL).LT.(0.)))
     & US=36
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(-.3).AND.
     & (Z3D/MOL).LT.(-0.1)))US=37
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(-.5).AND.
     & (Z3D/MOL).LT.(-0.3)))US=38
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(-.8).AND.
     & (Z3D/MOL).LT.(-0.5)))US=39
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(-1.1).AND.
     & (Z3D/MOL).LT.(-.8)))US=40
C
      IF((WIND3D.GT.1.).AND.((Z3D/MOL).GT.(-2.).AND.
     & (Z3D/MOL).LT.(-1.1)))US=41
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(-0.1).AND.
     & (Z3D/MOL).LT.(0.)))US=42
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(-.3).AND.
     & (Z3D/MOL).LT.(-0.1)))US=43
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(-.5).AND.
     & (Z3D/MOL).LT.(-0.3)))US=44
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(-.8).AND.
     & (Z3D/MOL).LT.(-0.5)))US=45
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(-1.1).AND.
     & (Z3D/MOL).LT.(-.8)))US=46
C
      IF((WIND3D.LT.1.).AND.((Z3D/MOL).GT.(-2.).AND.
     & (Z3D/MOL).LT.(-1.1)))US=47
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
          DO I=1,M-1
      WRITE(US,3781)INPUT(KTURB+1,3),INPUT(KTURB+1,4),INPUT(KTURB+1,5),
     &   INPUT(KTURB+1,6),INPUT(KTURB+1,7),
     &    DR,Z3D/MOL,WT,USTAR,TSTAR,WIND3D,
     &    HZwS(I),USMOOTH(I),VSMOOTH(I),WSMOOTH(I),TSMOOTH(I),
     &    AU,BU,AV,BV,AW,BW,
     &    DISSIPW,DISMEANW,DISSIPU,DISMEANU,DISSIPV,DISMEANV,
     &    WTSMOOTH(I)
3781    FORMAT(1X,F3.0,1X,F3.0,1X,F3.0,
     &   1X,F3.0,1X,F3.0,
     &  1X,F5.0,1X,F7.2,1X,F6.2,1X,F5.2,1X,F8.3,1X,F5.2,
     &  1X,F8.6,1X,F15.7,1X,F15.7,1X,F15.7,1X,F15.7,
     &  1X,F5.2,1X,F5.2,1X,F5.2,1X,F5.2,1X,F5.2,1X,F5.2,
     &  1X,F10.7,1X,F10.7,1X,F10.7,1X,F10.7,1X,F10.7,1X,F10.7,
     &  1X,F15.9)
          END DO
C
      WRITE(13,815)INPUT(KTURB+1,3),INPUT(KTURB+1,4),INPUT(KTURB+1,5),
     &   INPUT(KTURB+1,6),INPUT(KTURB+1,7),Z3D/MOL,
     &   USTAR,TSTAR,ECT,WU,WV,WT,T0,WIND2D,DR,
     &   DPU,DPV,DPW,DPT,
     &   DISSIPW,DISMEANW,DISSIPU,DISMEANU,DISSIPV,DISMEANV           
C
815   FORMAT(1X,F3.0,1X,F3.0,1X,F3.0,
     &   1X,F3.0,1X,F3.0,1X,F7.2, 
     &   1X,F11.2,1X,F11.2,1X,F6.2,1X,F9.2,1X,F9.2,1X,F8.2,1X,F8.2,
     &   1X,F10.5,1X,F10.5,
     &   1X,F10.5,1X,F10.4,1X,F10.5,1X,F10.2,
     &    1X,F10.7,1X,F10.7,1X,F10.7,1X,F10.7,1X,F10.7,1X,F10.7)
c
c
cccccccccccccccccccccccccccccccccccccccccccccccccc
C
CCC SUBROUTINE MINIMIZE: PARA FITAR OS PONTOS DO ESPECTRO,
CCC ISTO E': PARA APROXIMAR POR FUNCOES DO TIPO:
CCC    S(n)= (A * (n/nm))/(1+B*(n/nm)^(5/3))
CCC A SUBROTINA BUSCA A,B e nm QUE MELHOR FITAM OS PONTOS
CCC
      ELSE
      GO TO 9977
      ENDIF
9977  CONTINUE
c
C
      KTURB=KTURB+KK
        do i=1,n
        ninput(i,1)=0.
        ninput(i,2)=0.
        ninput(i,3)=0.
        nninput(i,1)=0.
        nninput(i,2)=0.
        nninput(i,3)=0.
        nnninput(i,1)=0.
        nnninput(i,2)=0.
        nnninput(i,3)=0.
       enddo
        IF(KTURB.LT.(NN-N+1))GOTO 6688
C      IF(KTURB.LT.20000)GOTO 6688
6699  CONTINUE
C
      CLOSE(13)
      CLOSE(15)
C
      DO I=24,47
        CLOSE(I)
        END DO
C
C
      STOP
        END
C


C############  SUBROTINAS CHAMADAS   ##################
C
C
      SUBROUTINE TWOFFT(DATA1,DATA2,FFT1,FFT2,N)
      DIMENSION DATA1(N),DATA2(N)
      COMPLEX FFT1(N),FFT2(N),H1,H2,C1,C2
      C1=CMPLX(0.5,0.0)
      C2=CMPLX(0.0,-0.5)
        DO 11 J=1,N
        FFT1(J)=CMPLX(DATA1(J),DATA2(J))
11    CONTINUE
      CALL FOUR1(FFT1,N,1)
      FFT2(1)=CMPLX(AIMAG(FFT1(1)),0.0)
      FFT1(1)=CMPLX(REAL(FFT1(1)),0.0)
      N2=N+2
      DO 12 J=2,N/2+1
        H1=C1*(FFT1(J)+CONJG(FFT1(N2-J)))
        H2=C2*(FFT1(J)-CONJG(FFT1(N2-J)))
        FFT1(J)=H1
        FFT1(N2-J)=CONJG(H1)
        FFT2(J)=H2
        FFT2(N2-J)=CONJG(H2)
12    CONTINUE
      RETURN
      END


      SUBROUTINE FOUR1(DATA,NN,ISIGN)
      REAL*8 WR,WI,WPR,WPI,WTEMP,THETA
      DIMENSION DATA(*)
      N=2*NN
      J=1
      DO 11 I=1,N,2
        IF(J.GT.I)THEN
          TEMPR=DATA(J)
          TEMPI=DATA(J+1)
          DATA(J)=DATA(I)
          DATA(J+1)=DATA(I+1)
          DATA(I)=TEMPR
          DATA(I+1)=TEMPI
        ENDIF
        M=N/2
1       IF ((M.GE.2).AND.(J.GT.M)) THEN
          J=J-M
          M=M/2
        GO TO 1
        ENDIF
        J=J+M
11    CONTINUE
      MMAX=2
2     IF (N.GT.MMAX) THEN
        ISTEP=2*MMAX
        THETA=6.28318530717959D0/(ISIGN*MMAX)
        WPR=-2.D0*SIN(0.5D0*THETA)**2
        WPI=SIN(THETA)
        WR=1.D0
        WI=0.D0
        DO 13 M=1,MMAX,2
          DO 12 I=M,N,ISTEP
            J=I+MMAX
            TEMPR=SNGL(WR)*DATA(J)-SNGL(WI)*DATA(J+1)
            TEMPI=SNGL(WR)*DATA(J+1)+SNGL(WI)*DATA(J)
            DATA(J)=DATA(I)-TEMPR
            DATA(J+1)=DATA(I+1)-TEMPI
            DATA(I)=DATA(I)+TEMPR
            DATA(I+1)=DATA(I+1)+TEMPI
12        CONTINUE
          WTEMP=WR
          WR=WR*WPR-WI*WPI+WR
          WI=WI*WPR+WTEMP*WPI+WI
13      CONTINUE
        MMAX=ISTEP
      GO TO 2
      ENDIF
      RETURN
      END



	SUBROUTINE WINDOW(WIN,WINTURB,N)
	REAL JANELA(N),WIN(N),WINTURB(N)
	M=FLOAT(N/10)
	K=FLOAT(9*N/10)
	PI=3.141596
C
C JANELA QUADRADA
C	DO 6513 I=1,N
C	JANELA(I)=1.
C6513    CONTINUE
C
C JANELA BELL TAPER (STULL, PG 310)
	DO 6513 I=1,N
	IF(I.LT.M.OR.I.GT.K) THEN
		JANELA(I)=(SIN(5*PI*I/N))**2
	ELSE
		JANELA(I)=1.
	ENDIF 
6513    CONTINUE
	DO 6514 I=1,N
	WINTURB(I)=WIN(I)*JANELA(I)
6514	CONTINUE
	RETURN
	END


      SUBROUTINE SPECDIS(VEM,DSPEC,N,K)
      COMPLEX VEM(N)  
      real SPEC(N)
      REAL DSPEC(K+1)
      COMMON /KOEFF/FREQU
C A DIVISAO POR (N) NO DO ABAIXO E PARA COMPENSAR A
C NAO-NORMALIZACAO NA SUBROTINA TWOFFT
      DO 7615 I=1,N
      SPEC(I)=(VEM(I)*(CONJG(VEM(I))))/(N*N)
CHANGE DA DISCRETE ENERGY SPECTRUM TO SPECTRAL DENSITY
c
7615  CONTINUE
      DELTAN=N/FREQU
c       deltan=1.
C
c
      DO 7320 I=1,K
      DSPEC(I)=2*SPEC(I)*DELTAN
7320  CONTINUE
      DSPEC(K+1)=SPEC(K+1)*DELTAN
      RETURN
      END

	SUBROUTINE CROSS(DAT1,DAT2,COESP,QUADRAT)
	PARAMETER(N=16384)
	COMPLEX DAT1(N),DAT2(N)
	COMPLEX CROSESP(N)
	REAL COESP(N),QUADRAT(N)
	DO 5413 I=1,N
	CROSESP(I)=(DAT1(I)*(CONJG(DAT2(I))))/(N*N)
5413  CONTINUE
	DO 5414 I=1,N
	COESP(I)=REAL(CROSESP(I))
	QUADRAT(I)=IMAG(CROSESP(I))
5414  CONTINUE
	RETURN
	END
c
C 
C      
      SUBROUTINE BANDAS(fqin,spin,fqout,spout)
      parameter(n=8192,m=44)
      integer nout(n)
      integer ipos
      real fqin(n),spin(n),fqout(n),spout(n)
      real fmin,fmax
      real ratio,xpos
c
c
      fmin=fqin(1)
      fmax=fqin(n)/1.
      nsamp2=n/2.
      nclass=M
      nclass2=0.
c
      do 100 i=1,nclass
      spout(i)=0.
      fqout(i)=0.
	nout(i)=0.
100   continue
c
c
      do 200 i=1,n
      ratio=log10(fqin(i)/fmin)/log10(fmax/fmin)
      xpos=ratio*nclass
      ipos=anint(xpos)
      if(ipos.eq.0)ipos=1
      spout(ipos)=spout(ipos)+spin(i)
      fqout(ipos)=fqout(ipos)+fqin(i)
      nout(ipos)=nout(ipos)+1
200   continue
c     
      ipos=0
      do 300 i=1,nclass
          if(nout(i).ne.0) then
          ipos=ipos+1
          nclass2=nclass2+1
          spout(nclass2)=spout(i)/float(nout(i))
          fqout(nclass2)=fqout(i)/float(nout(i))
	    nout(ipos)=nout(i)
          endif
300   continue
      RETURN
      END 
C 
      SUBROUTINE REALFT(DATA,N,ISIGN)
      REAL*8 WR,WI,WPR,WPI,WTEMP,THETA
      DIMENSION DATA(*)
      THETA=6.28318530717959D0/2.0D0/DBLE(N)
      C1=0.5
      IF (ISIGN.EQ.1) THEN
        C2=-0.5
        CALL FOUR1(DATA,N,+1)
      ELSE
        C2=0.5
        THETA=-THETA
      ENDIF
      WPR=-2.0D0*DSIN(0.5D0*THETA)**2
      WPI=DSIN(THETA)
      WR=1.0D0+WPR
      WI=WPI
      N2P3=2*N+3
      DO 11 I=2,N/2+1
        I1=2*I-1
        I2=I1+1
        I3=N2P3-I2
        I4=I3+1
        WRS=SNGL(WR)
        WIS=SNGL(WI)
        H1R=C1*(DATA(I1)+DATA(I3))
        H1I=C1*(DATA(I2)-DATA(I4))
        H2R=-C2*(DATA(I2)+DATA(I4))
        H2I=C2*(DATA(I1)-DATA(I3))
        DATA(I1)=H1R+WRS*H2R-WIS*H2I
        DATA(I2)=H1I+WRS*H2I+WIS*H2R
        DATA(I3)=H1R-WRS*H2R+WIS*H2I
        DATA(I4)=-H1I+WRS*H2I+WIS*H2R
        WTEMP=WR
        WR=WR*WPR-WI*WPI+WR
        WI=WI*WPR+WTEMP*WPI+WI
11    CONTINUE
      IF (ISIGN.EQ.1) THEN
        H1R=DATA(1)
        DATA(1)=H1R+DATA(2)
        DATA(2)=H1R-DATA(2)
      ELSE
        H1R=DATA(1)
        DATA(1)=C1*(H1R+DATA(2))
        DATA(2)=C1*(H1R-DATA(2))
        CALL FOUR1(DATA,N,-1)
      ENDIF
      RETURN
      END


	subroutine SEMTREND(VEMCA,VAILA,n)
	real VEMCA(n),VAILA(N)
      real media, soma
      real somay,somax,somaxy,somax2
      real a0,a1,f,a
      real carajo(50,2)
      integer nl,N1
C
      do 6875 i=1,n
	VAILA(I)=0.
6875  continue
      nn=30000
      nl=0 
      f=10
      ni=1
      med=1  ! must be an integer
      nf=f*60*med
      dnf=nf
C     
        m=1
C
9     continue
        soma=0.
CC
        do i=ni,nf
        soma=soma + VEMCA(i)
        enddo
        media=soma/(dnf)
C
        a=ni+nf 
        carajo(m,1)=a/2 
        carajo(m,2)=media 
C
	  m=m+1
        ni=ni+dnf
        nf=nf+dnf 
        if(m.lt.27) goto 9 !CUIDADO
        x=0.
        y=0.
        somax=0.
        somay=0.
        somaxy=0.
        somax2=0.
        N1=0
        a0=0.
        a1=0.
C
        do 15 k=1,m-1
        x=carajo(k,1)
        y=carajo(k,2)
C      
        N1=N1+1
        somax=somax+x
        somay=somay+y
        somaxy=somaxy+x*y
        somax2=somax2+x**2
C
   15  continue
       a0=(somay*somax2-somax*somaxy)/(N*somax2-somax**2)
        a1=(N1*somaxy-somax*somay)/(N1*somax2-somax**2)
C
C
        do i=1,n
        x=float(i)
        VAILA(i)=VEMCA(i)-(a1*x)
        enddo
C       
      do 6877 i=1,n
	  VEMCA(i)=0.
6877  continue

      
	return
      end  

      SUBROUTINE FIT(X,Y,NDATA,SIG,MWT,A,B,SIGA,SIGB,CHI2,Q)
      DIMENSION X(NDATA),Y(NDATA),SIG(NDATA)
      SX=0.
      SY=0.
      ST2=0.
      B=0.
      IF(MWT.NE.0) THEN
        SS=0.
        DO 11 I=1,NDATA
          WT=1./(SIG(I)**2)
          SS=SS+WT
          SX=SX+X(I)*WT
          SY=SY+Y(I)*WT
11      CONTINUE
      ELSE
        DO 12 I=1,NDATA
          SX=SX+X(I)
          SY=SY+Y(I)
c	PRINT*,X(I),Y(I)
12      CONTINUE
        SS=FLOAT(NDATA)
      ENDIF
      SXOSS=SX/SS
      IF(MWT.NE.0) THEN
        DO 13 I=1,NDATA
          T=(X(I)-SXOSS)/SIG(I)
          ST2=ST2+T*T
          B=B+T*Y(I)/SIG(I)
13      CONTINUE
      ELSE
        DO 14 I=1,NDATA
          T=X(I)-SXOSS
          ST2=ST2+T*T
          B=B+T*Y(I)
14      CONTINUE
      ENDIF
      B=B/ST2
      A=(SY-SX*B)/SS
      SIGA=SQRT((1.+SX*SX/(SS*ST2))/SS)
      SIGB=SQRT(1./ST2)
      CHI2=0.
      IF(MWT.EQ.0) THEN
        DO 15 I=1,NDATA
          CHI2=CHI2+(Y(I)-A-B*X(I))**2
15      CONTINUE
        Q=1.
        SIGDAT=SQRT(CHI2/(NDATA-2))
        SIGA=SIGA*SIGDAT
        SIGB=SIGB*SIGDAT
      ELSE
        DO 16 I=1,NDATA
          CHI2=CHI2+((Y(I)-A-B*X(I))/SIG(I))**2
16      CONTINUE
        Q=GAMMQ(0.5*(NDATA-2),0.5*CHI2)
      ENDIF
      RETURN
      END

      FUNCTION GAMMQ(A,X)
      IF(X.LT.0..OR.A.LE.0.)PAUSE
      IF(X.LT.A+1.)THEN
        CALL GSER(GAMSER,A,X,GLN)
        GAMMQ=1.-GAMSER
      ELSE
        CALL GCF(GAMMCF,A,X,GLN)
        GAMMQ=GAMMCF
      ENDIF
      RETURN
      END

      SUBROUTINE GSER(GAMSER,A,X,GLN)
      PARAMETER (ITMAX=100,EPS=3.E-7)
      GLN=GAMMLN(A)
      IF(X.LE.0.)THEN
        IF(X.LT.0.)PAUSE
        GAMSER=0.
        RETURN
      ENDIF
      AP=A
      SUM=1./A
      DEL=SUM
      DO 11 N=1,ITMAX
        AP=AP+1.
        DEL=DEL*X/AP
        SUM=SUM+DEL
        IF(ABS(DEL).LT.ABS(SUM)*EPS)GO TO 1
11    CONTINUE
      PAUSE 'A too large, ITMAX too small'
1     GAMSER=SUM*EXP(-X+A*LOG(X)-GLN)
      RETURN
      END

      SUBROUTINE GCF(GAMMCF,A,X,GLN)
      PARAMETER (ITMAX=100,EPS=3.E-7)
      GLN=GAMMLN(A)
      GOLD=0.
      A0=1.
      A1=X
      B0=0.
      B1=1.
      FAC=1.
      DO 11 N=1,ITMAX
        AN=FLOAT(N)
        ANA=AN-A
        A0=(A1+A0*ANA)*FAC
        B0=(B1+B0*ANA)*FAC
        ANF=AN*FAC
        A1=X*A0+ANF*A1
        B1=X*B0+ANF*B1
        IF(A1.NE.0.)THEN
          FAC=1./A1
          G=B1*FAC
          IF(ABS((G-GOLD)/G).LT.EPS)GO TO 1
          GOLD=G
        ENDIF
11    CONTINUE
      PAUSE 'A too large, ITMAX too small'
1     GAMMCF=EXP(-X+A*ALOG(X)-GLN)*G
      RETURN
      END

      FUNCTION GAMMLN(XX)
      REAL*8 COF(6),STP,HALF,ONE,FPF,X,TMP,SER
      DATA COF,STP/76.18009173D0,-86.50532033D0,24.01409822D0,
     *    -1.231739516D0,.120858003D-2,-.536382D-5,2.50662827465D0/
      DATA HALF,ONE,FPF/0.5D0,1.0D0,5.5D0/
      X=XX-ONE
      TMP=X+FPF
      TMP=(X+HALF)*LOG(TMP)-TMP
      SER=ONE
      DO 11 J=1,6
        X=X+ONE
        SER=SER+COF(J)/X
11    CONTINUE
      GAMMLN=TMP+LOG(STP*SER)
      RETURN
      END